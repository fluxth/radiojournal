name: Lint codebase

on:
  pull_request:
  push:
    branches:
      - "main"

jobs:
  lint:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    env:
      # renovate: datasource=github-releases depName=terraform-linters/tflint
      TFLINT_VERSION: 'v0.50.3'
    steps:
      - name: Checkout repository
        uses: actions/checkout@0ad4b8fadaa221de15dcec353f45205ec38ea70b # v4.1.4

      - name: Setup python
        uses: actions/setup-python@82c7e631bb3cdc910f68e0081d67478d79c6982d # v5.1.0
        with:
          python-version-file: '.python-version'
          cache: 'pip'

      - uses: actions/cache@0c45773b623bea8c8e75f6c82b208c3cf94ea4f9 # v4.0.2
        name: Cache tflint plugin dir
        with:
          path: ~/.tflint.d/plugins
          key: ${{ runner.os }}-tflint-${{ hashFiles('.tflint.hcl') }}

      - uses: terraform-linters/setup-tflint@19a52fbac37dacb22a09518e4ef6ee234f2d4987 # v4.0.0
        name: Setup tflint
        with:
          tflint_version: ${{ env.TFLINT_VERSION }}

      - name: Initialize tflint
        run: tflint --init
        env:
          # https://github.com/terraform-linters/tflint/blob/master/docs/user-guide/plugins.md#avoiding-rate-limiting
          GITHUB_TOKEN: ${{ github.token }}

      - name: Setup PNPM
        uses: pnpm/action-setup@a3252b78c470c02df07e9d59298aecedc3ccdd6d # v3.0.0
        with:
          package_json_file: frontend/package.json

      - name: Set up Node.js
        uses: actions/setup-node@60edb5dd545a775178f52524783378180af0d1f8 # v4.0.2
        with:
          node-version-file: ".nvmrc"
          cache: "pnpm"
          cache-dependency-path: "frontend/pnpm-lock.yaml"

      - name: Install PNPM dependencies
        working-directory: frontend
        run: pnpm install --frozen-lockfile

      - name: Install Rust linting dependencies
        run: rustup component add rustfmt clippy

      - name: Run pre-commit
        uses: pre-commit/action@2c7b3805fd2a0fd8c1884dcaebf91fc102a13ecd # v3.0.1
