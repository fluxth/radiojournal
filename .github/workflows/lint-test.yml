name: Lint and test radiojournal codebase

on:
  pull_request:
  push:
    branches:
      - "main"

jobs:
  lint:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    env:
      # renovate: datasource=github-releases depName=terraform-linters/tflint
      TFLINT_VERSION: 'v0.53.0'
    steps:
      - name: Checkout repository
        uses: actions/checkout@eef61447b9ff4aafe5dcd4e0bbf5d482be7e7871 # v4.2.1

      - name: Setup python
        uses: actions/setup-python@f677139bbe7f9c59b41e40162b753c062f5d49a3 # v5.2.0
        with:
          python-version-file: '.python-version'
          cache: 'pip'

      - uses: actions/cache@2cdf405574d6ef1f33a1d12acccd3ae82f47b3f2 # v4.1.0
        name: Cache tflint plugin dir
        with:
          path: ~/.tflint.d/plugins
          key: ${{ runner.os }}-tflint-${{ hashFiles('.tflint.hcl') }}

      - uses: terraform-linters/setup-tflint@19a52fbac37dacb22a09518e4ef6ee234f2d4987 # v4.0.0
        name: Setup tflint
        with:
          tflint_version: ${{ env.TFLINT_VERSION }}

      - name: Initialize tflint
        run: tflint --init
        env:
          # https://github.com/terraform-linters/tflint/blob/master/docs/user-guide/plugins.md#avoiding-rate-limiting
          GITHUB_TOKEN: ${{ github.token }}

      - name: Setup PNPM
        uses: pnpm/action-setup@fe02b34f77f8bc703788d5817da081398fad5dd2 # v4.0.0
        with:
          package_json_file: frontend/package.json

      - name: Set up Node.js
        uses: actions/setup-node@0a44ba7841725637a19e28fa30b79a866c81b0a6 # v4.0.4
        with:
          node-version-file: ".nvmrc"
          cache: "pnpm"
          cache-dependency-path: "frontend/pnpm-lock.yaml"

      - name: Install PNPM dependencies
        working-directory: frontend
        run: pnpm install --frozen-lockfile

      - name: Install rust toolchain
        run: cargo version

      - name: Run pre-commit
        uses: pre-commit/action@2c7b3805fd2a0fd8c1884dcaebf91fc102a13ecd # v3.0.1

  test-rust:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - name: Checkout repository
        uses: actions/checkout@eef61447b9ff4aafe5dcd4e0bbf5d482be7e7871 # v4.2.1

      - name: Install rust toolchain
        run: cargo version

      - name: Cache rust artifacts
        uses: Swatinem/rust-cache@23bce251a8cd2ffc3c1075eaa2367cf899916d84 # v2.7.3
        with:
          shared-key: tests
          save-if: ${{ github.ref == 'refs/heads/main' }}

      - name: Test rust code
        run: cargo test
